# application.yml
spring:
  application:
    name: pudongpudong
  config:
    # 민감 정보가 포함된 파일을 import 합니다.
    import: "classpath:application-secret.yml"

  jpa:
    open-in-view: false
    hibernate:
      # ddl-auto는 개발 단계에서만 create-drop을 사용하고, 운영 환경에서는 none 또는 validate를 사용합니다.
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        # MySQLDialect 설정은 Spring Boot가 자동으로 감지하므로 제거합니다.
        format_sql: true

  security:
    oauth2:
      client:
        registration:
          kakao:
            # application-secret.yml에서 정의된 환경 변수/속성을 참조합니다.
            client-id: ${KAKAO_CLIENT_ID}
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            client-name: Kakao
            scope:
              - profile_nickname
              - profile_image
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

# Swagger 설정
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  default-produces-media-type: application/json
  default-consumes-media-type: application/json

# JWT 설정
jwt:
  secret: c2lsdmVybmluZS10ZWNoLXNwcmluZy1ib290LWp3dC10dXRvcmlhbC1zZWNyZXQtc2lsdmVybmluZS10ZWNoLXNwcmluZy1ib290LWp3dC10dXRvcmlhbC1zZWNyZXQ=
  access-token-expiration-millis: 3600000
  refresh-token-expiration-millis: 604800000

# 서버 설정
server:
  port: 8080
  servlet:
    context-path: /

# 로그 설정
logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    purureum.pudongpudong: DEBUG
    org.springframework.web: DEBUG
    org.springframework.web.servlet: DEBUG
    org.springframework.web.client: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
